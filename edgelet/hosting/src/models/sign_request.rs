/*
 * IoT Edge Hosting Environment API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2019-04-10
 *
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

#[allow(unused_imports)]
use serde_json::Value;

#[derive(Debug, Serialize, Deserialize)]
pub struct SignRequest {
    /// Sign algorithm to be used.
    #[serde(rename = "algo")]
    algo: String,
    /// Data to be signed.
    #[serde(rename = "data")]
    data: String,
    /// The identity used for deriving the key for signing.
    #[serde(rename = "identity", skip_serializing_if = "Option::is_none")]
    identity: Option<String>,
}

impl SignRequest {
    pub fn new(algo: String, data: String) -> SignRequest {
        SignRequest {
            algo: algo,
            data: data,
            identity: None,
        }
    }

    pub fn set_algo(&mut self, algo: String) {
        self.algo = algo;
    }

    pub fn with_algo(mut self, algo: String) -> SignRequest {
        self.algo = algo;
        self
    }

    pub fn algo(&self) -> &String {
        &self.algo
    }

    pub fn set_data(&mut self, data: String) {
        self.data = data;
    }

    pub fn with_data(mut self, data: String) -> SignRequest {
        self.data = data;
        self
    }

    pub fn data(&self) -> &String {
        &self.data
    }

    pub fn set_identity(&mut self, identity: String) {
        self.identity = Some(identity);
    }

    pub fn with_identity(mut self, identity: String) -> SignRequest {
        self.identity = Some(identity);
        self
    }

    pub fn identity(&self) -> Option<&String> {
        self.identity.as_ref()
    }

    pub fn reset_identity(&mut self) {
        self.identity = None;
    }
}
